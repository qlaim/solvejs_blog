currently work-in-progress before git push:
---- git commit -m 'fetch posts working but resolving html vs text and images; images post to fs api working; del at db and fs working; images working api to react; state update on controlled component to page working for blog plan to send to db; working on db send and update of posts state; login working with settimeout; 

CURRENT: PRIORITIZED 3:
_________________________
>>>>>> still resolving useraccesscheck to db issue >> saved pre-vacation

MUST: 1. configure postgresql references to fs images
--- posts editing and posts creation from db strings;
--- move ad images to directory for node js count
--- update tables
----- users and posts editing;
----- set > create comments table per post if not exists > key: alt of post id?
----- ===> "comments_pkey" PRIMARY KEY, btree (id)
change for new PK ===> Foreign-key constraints:
    "fk_posted_to_post" FOREIGN KEY (id) REFERENCES posts(id)
    ---- change this to auto-create table per post
    "fk_user_id" FOREIGN KEY (id) REFERENCES users(id)
2. Development focus on common patterns
---- initial focus: modules patterns
3. MISSING IMPORTANT:
--- password mask to db query
--- comments area login prompt (set timeout check on page reentry - does not logout if computer sleep)
----- facebook & twitter integration

OTHERS CURRENT NOT URGENT:
__________________________

- var form = new formidable.IncomingForm();
    // need to refactor to prevent overwriting existing files here > alternatively write function to check db first
- install morgan logger
- later: change input fields react to stream with server to change to green if name avail on server
- suppress SQL errors to FE;
- post > click event on featured image and title
- images connect
--- file count images for array random ad
- add story to website
--- spice up natural language and effects
--- add email form > integrate smtp
- done: WEBPACK >>> separate dev and password

OTHERS NON-CURRENT NOT URGENT:
______________________________

- database and .env backup plan
- adgen > working on generating demo ad from array.length and random based on 2 course categories (javascript and full-stack)
- projects page
- ad > fix random showing of 2 or 3 images
- popup > reposition to middle
- new content on solvejs blog
- refactor topic bumpers.solvejs js-related
- twitter, disqus comments api to comments table?
- post creation > select in edit for categories
- possibly > posts table > connect to foreign key image @ table images

==========================================
==========================================
layout:

- logged in state > App
- name with developer on blog posts
- header
    SolveJS
    Learn Past Yet
- github for code copying
    - code block on website + commentary as the posts
    - find proper technical terms online
    - advise when unsure or information may not be correct
    - solicit feedback and corrections
    - reload for /page > fix
    - login will show user name with 'logout' when logged in
        - dashboard will show if user is admin
            - options to PUT (create) post with featured image, code section, etc.
    - env variables for any passwords and keys for security
- header > change to image for size adjust
    - fix header resize on smaller screens
- router
    - div#web-projects > collapsed content requiring hover to reveal
    - switch
        - logged in vs not logged in (blog, also)
            - page with all headers, etc
            - page with all headers, etc. + switched nested pages requiring login (blog will have like, comments if logged in with gmail, facebook, or twitter)
