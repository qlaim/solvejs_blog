{"version":3,"sources":["containers/Contact.jsx","containers/users/users.js","containers/menu/Menu.jsx","components/Footer.jsx","containers/Authentication/Login.jsx","containers/Authentication/Register.jsx","components/Dashboard.jsx","containers/bumpers/Admin.jsx","containers/bumpers/SoloBumper.jsx","components/Title.jsx","utils/randColors.js","components/Categories.jsx","containers/bumpers/BumpersAndCats.jsx","containers/Authentication/LoginControl.jsx","components/About.jsx","containers/bumpers/SoloBumperShort.jsx","containers/bumpers/Cart.jsx","App.js","containers/serviceWorker.js","index.js"],"names":["Contact","props","id","className","hide","Form","htmlFor","type","placeholder","required","defaultValue","value","minLength","maxLength","cols","rows","users","Menu","triggerCartUpdateInt","setInterval","handleCartStorChange","state","menuArr","style","fontSize","backgroundColor","regFormHide","logFormHide","contactFormHide","forLocalStorUpdate","JSON","parse","localStorage","getItem","handleRegFormClick","bind","handleLogFormClick","handleContactFormClick","checkUserDB","this","setState","currStateTotal","cartIcon","document","querySelector","nodeSpan","createElement","appendChild","textContent","childNodes","children","length","removeChild","event","preventDefault","pass1","pass2","loginEmailEntered","loginPassEntered","emailEntered","checkEmailExists","emails","filteredEmail","map","item","email","toString","filter","includes","console","log","to","linkAddr","linkName","onClick","submenu","onChange","Component","Footer","footerEls","PrintFooter","React","index","key","listStyle","marginRight","href","Login","action","method","showForm","onSubmit","checkDB","name","trackText","Register","html","Dashboard","Admin","initialState","isActive","items","Title","AdminMenuItem","SoloBumper","cart","getElementsByClassName","totalNumSpan","append","addToCart","display","removeAddToCart","handleClickChangeAddToCart","itemsParsedFromLocStor","currItem","target","parentNode","previousSibling","tempStor","window","setItem","stringify","currIndex","indexOf","undefined","splice","push","itemStored","handleInCart","prevState","textStyle","color","fontWeight","text","handleClick","inCartTotal","inCartItems","containerStyle","buttonClass","clickCartButtonHandle","CartText","clickAddCartChange","checkInCart","onLoad","colors","colorsArrLength","randCol","Math","floor","random","Categories","Consumer","context","contextList","currBumpersPages","handlePageChangeCat","selected","radioCatSelected","handleRadioCatChange","Children","contextForm","radioPagesFiltered","contextCartItems","contextAddCartHandle","handleAddCartClick","contextTextStyle","contextButtonIn","textStyleInCartButtonClass1","contextButtonOut","textStyleInCartButtonClass2","contextFontSize","bumperTextSize","contextFormPages","radioCatSelectedPageNums","pagesClick","catPassedForPageTurn","CatFormToggleBumpers","unparsedLocStor","parsedLocStor","width","height","lineHeight","title","CatPagesArr","customcattag","catsRadioArrForForm","checked","CategoryRadioList","pagesForCats","BumpersContext","createContext","BumperContextProvider","bumperCatMapToPages","catPassed","switchGenCreate","itemsAPIConnect","apiData","transferAPITo","createPages","perPage","itemCategory","transferAPIInfo","destrAPIState","bumperObj","pages","bumpersFiltered","bumpSelectedLength","numberOfPages","Number","isInteger","parseInt","testing","pageNumbersArr","pageNumGen","temp","j","z","objBumpersTempLoader","pushPage","i","pageNumbersArrTemp","objTemp","category","fontGrow","querySelectorAll","forEach","font","iDiv","firstElementChild","clientWidth","replace","iSpan","firstChild","locallyStoredCart","testerLocStor","tester","cartLoggedinStatus","cookie","split","find","sidebarPrevBumpers","sidebarCurrBumpers","sidebarCurrBumpersPages","sidebarPages","bumGenLoad","textStyleInCart","textStyleOutCart","handlePageChange","dataPullFromAPI","loopThroughBumperCatMapToPages","setTimeout","storageLoc","fetch","headers","then","resp","json","data","localStor","e","tempInCartState","getAttribute","currentTarget","stopPropagation","passedFromSwitch","Provider","prevBumpers","textSize","LoginControl","handleChange","removeCookies","body","res","isLoggedIn","regFormHideClasses","logFormHideClasses","handleLogin","handleLogout","status","logCookies","stat","loggedIn","decodeURIComponent","credentials","dataPass","loginEmailInput","loginPasswordInput","info","handleCookie","click","exact","path","component","Button","verticalAlign","About","useState","CartBumpers","cartNumToIcon","currentCartTotal","totalCost","handleHoverCartButton","titleForButton","purchButtonDisabled","handleOrder","a","inCart","referrerPolicy","response","visibility","totalChange","destrData","contextData","textAlign","substring","margin","marginTop","CCPay","show","PurchButton","disabled","order","hover","onMouseOver","TotalCartCost","Cart","App","Registration","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.27a4e371.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Contact(props) {\n    return (\n        <div id=\"contact-wrapper\" className={props.className}>\n            <Form hide={props.className}/>\n        </div>\n    )\n}\n\nconst Form = (props) => {\n    return (\n        <div id=\"contact-form-div\">\n        <form id='toggle-contact-form' className=\"\">\n        <label htmlFor=\"email-contact-name\" className=\"f-l-i\">Contact Name</label>\n        <input type=\"text\" id=\"email-contact-name\"  className=\"f-l-i\" placeholder=\"Name\" required></input>\n        <label htmlFor=\"email-contact\" className=\"f-l-i\">Contact Email</label>\n        <input type=\"email\" id='email-contact' className=\"f-l-i\" placeholder=\"contact email\" required></input>\n    <label htmlFor=\"contact-email-category\" className=\"f-l-i\">Select Category</label>\n    <select id=\"contact-email-category\" className=\"f-l-i\">\n        <optgroup>\n            <option defaultValue=\"email-contact-cat-general\">General</option>\n            <option value=\"email-contact-cat-website\">Website</option>\n            <option value=\"email-contact-cat-order\">Order</option>\n            <option value=\"email-contact-cat-other\">Other</option>\n        </optgroup>\n    </select>\n    <textarea id=\"email-message\" minLength=\"50\" maxLength=\"1800\" cols=\"\" rows=\"20\" placeholder=\"Please type your message here before sending.\" required></textarea>\n    <button type=\"submit\" defaultValue=\"Send\">Send Message</button>\n    <button type=\"reset\">Reset</button>\n    <button id=\"cancel-form-button\" className=\"click-hide-contact-us\">Cancel</button>\n    </form>\n        </div>\n    )\n}\n","/* user template > temp until db integration\n\n{\n    'firstName': 'string',\n    'email': 'string',\n    'password': 'hash1111',\n    'favCategories': [] // will push if user views certain # in a category\n}\n\n*/\n\nconst users = [\n    {\n        'firstName': 'Mike',\n        'email': 'mike@gmail.com',\n        'password': 'hash1111',\n        'favCategories': [] // will push if user views certain # in a category\n    },\n    {\n        'firstName': 'Jeff',\n        'email': 'jeff@gmail.com',\n        'password': 'hash1111',\n        'favCategories': [] // will push if user views certain # in a category\n    },\n    {\n        'firstName': 'Cliff',\n        'email': 'cliff@gmail.com',\n        'password': 'hash1111',\n        'favCategories': [] // will push if user views certain # in a category\n    },\n    {\n        'firstName': 'Stil',\n        'email': 'stil@gmail.com',\n        'password': 'hash1111',\n        'favCategories': [] // will push if user views certain # in a category\n    },\n    \n]\n\nexport {users};","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Contact from '../Contact';\nimport {users} from '../users/users';\n\nexport class Menu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuArr : \n        [\n            {\n                'type': 'li',\n                'linkName': 'Home',\n                'linkAddr': '/',\n                'className': 'nav-menu-item to-hide',\n                'submenu': {}\n            },\n            {\n                'type': 'li',\n                'linkName': 'About',\n                'linkAddr': '/about',\n                'className': 'nav-menu-item to-hide',\n                'submenu': {}\n            },\n            {\n                'type': 'li',\n                'linkName': 'Contact',\n                'linkAddr': '/',\n                'className': 'nav-menu-item click-hide-contact-us to-hide',\n                'submenu': {}\n            },\n            {   \n                'type': 'ul',\n                'className': 'login-container',\n                'submenu': \n                [\n                    {\n                        'type': 'li',\n                        'linkName': (<span style={{fontSize: '200%', backgroundColor: ''}}>&#128722;</span>),\n                        'linkAddr': '/cart',\n                        'className': 'nav-menu-item to-hide login cart'\n                    }\n                ]\n            },\n            {\n                'type': 'li',\n                'linkName': 'Admin',\n                'linkAddr': '/admin',\n                'className': 'nav-menu-item to-hide admin',\n                'submenu': {}\n            }\n        ],\n        regFormHide: 'register-form hide-element',\n        logFormHide: 'login-form hide-element',\n        contactFormHide: 'hide-element',\n        forLocalStorUpdate: JSON.parse(localStorage.getItem('inCartLocStoreCount'))\n      };\n      this.handleRegFormClick = this.handleRegFormClick.bind(this);\n      this.handleLogFormClick = this.handleLogFormClick.bind(this);\n      this.handleContactFormClick = this.handleContactFormClick.bind(this);\n      this.handleCartStorChange = this.handleCartStorChange.bind(this);\n      this.checkUserDB = this.checkUserDB.bind(this);\n    }\n    handleRegFormClick() {\n      this.state.regFormHide === 'register-form' ? this.setState({\n          regFormHide: 'register-form hide-element'\n      }) : this.setState({\n        regFormHide: 'register-form'\n    })\n  }\n  handleLogFormClick() {\n    this.state.logFormHide === 'login-form' ? this.setState({\n        logFormHide: 'login-form hide-element'\n    }) : this.setState({\n      logFormHide: 'login-form'\n  })\n  }\n  handleContactFormClick() {\n    this.state.contactFormHide === 'hide-element' ? this.setState({\n        contactFormHide: ''\n    }) : this.setState({\n      contactFormHide: 'hide-element'\n  })\n  }\n  triggerCartUpdateInt = setInterval(() =>\n    this.handleCartStorChange(), 3000);\n  handleCartStorChange() {\n    this.setState({\n      forLocalStorUpdate: JSON.parse(localStorage.getItem('inCartLocStoreCount'))\n    });\n      let cartIcon = document.querySelector('li.cart');\n          let currStateTotal;\n          currStateTotal = this.state.forLocalStorUpdate;\n          let nodeSpan = document.createElement('span');\n          cartIcon.appendChild(nodeSpan)\n          nodeSpan.textContent = '';\n          cartIcon.childNodes[1].textContent = currStateTotal;\n          if(cartIcon.children.length > 2) {\n              cartIcon.removeChild(cartIcon.childNodes[2])\n          }\n  }\n  // componentDidMount() { // not needed with trigger setinterval above\n  //   let cartIcon = document.querySelector('li.cart');\n  //       let currStateTotal;\n  //       currStateTotal = this.state.forLocalStorUpdate;\n  //       let nodeSpan = document.createElement('span');\n  //       cartIcon.appendChild(nodeSpan)\n  //       nodeSpan.textContent = '';\n  //       cartIcon.childNodes[1].textContent = currStateTotal;\n  //       if(cartIcon.children.length > 2) {\n  //           cartIcon.removeChild(cartIcon.childNodes[2])\n  //       }\n  // }\n  checkUserDB(event) {\n    event.preventDefault(); // not sure this is doing anything\n    let pass1 = document.querySelector('#register-password-input').value;\n    let pass2 = document.querySelector('#register-password-input-re-enter').value;\n    let loginEmailEntered = document.querySelector('#login-email-input');\n    let loginPassEntered = document.querySelector('#login-password-input');\n    let emailEntered = document.querySelector('#register-email-input').value;\n    if((pass1 === pass2) && (checkEmailExists(emailEntered) === true) ) {\n      console.log('please login to your account');\n      // need to check db for existing email entry\n      // can use checkDB function >> need to add inside for privacy\n    } else if(checkEmailExists(loginEmailEntered)) {\n      console.log('logged in > still need to check password')\n      } else {\n      console.log('not equal', emailEntered)\n    }\n    function checkEmailExists(emails) {\n      let filteredEmail = users.map(item =>\n        item.email.toString()\n      ).filter(item => item === emails);\n      if(filteredEmail.includes(emails)) {\n        return true;\n      } else if((loginEmailEntered === filteredEmail) && loginPassEntered) {\n        console.log('logged in')\n      } else {\n        return false;\n      }\n    }\n    }\n// start = 'this.state.menuArr';\nrender() {\n        return (\n            <header className=\"header site-header\">\n            <div className=\"header nav-menu-flex\">\n            <nav className=\"nav-menu\">\n            {/* console.log('twoReturn: ', twoReturn()) */}\n            {/* console.log({holder}) */}\n            {/* <CreateTestListPass list = {twoReturn()} /> */}\n            <ul>\n            <li className={this.state.menuArr[0].className}><Link to={this.state.menuArr[0].linkAddr}>{this.state.menuArr[0].linkName}</Link></li>\n            <li className={this.state.menuArr[1].className}><Link to={this.state.menuArr[1].linkAddr}>{this.state.menuArr[1].linkName}</Link></li>\n            <li className={this.state.menuArr[2].className} onClick={this.handleContactFormClick}><Link to={this.state.menuArr[2].linkAddr}>{this.state.menuArr[2].linkName}</Link></li>\n            <ul>\n                <li className={this.state.menuArr[3].submenu[0].className}><Link to={this.state.menuArr[3].submenu[0].linkAddr}>{this.state.menuArr[3].submenu[0].linkName}</Link></li>\n            </ul>\n            <li className={this.state.menuArr[4].className}><Link to={this.state.menuArr[4].linkAddr} onChange={this.handleCartStorChange}>{this.state.menuArr[4].linkName}</Link></li>\n            </ul>\n            </nav>\n            <Contact className={this.state.contactFormHide}/>\n            </div>\n            </header>\n            )\n        }\n    }\n \nexport default Menu;","import React from 'react';\n\nexport default class Footer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    footerEls = [\n        {\n            linkAddr: '#',\n            linkName: <span>&copy; 2020 SolveJS</span>\n        },\n        {\n            linkAddr: '#',\n            linkName: 'Terms'\n        },\n        {\n            linkAddr: '#',\n            linkName: 'Cookies'\n        },\n        {\n            linkAddr: '#',\n            linkName: 'FAQs'\n        }\n    ]\n    render() {\n        return (\n            <footer className=\"footer\">\n            <div className=\"footer footer-flex\">\n            <PrintFooter footerEls = {this.footerEls} />\n            </div>\n            </footer>\n            )\n    }\n}\n\nfunction PrintFooter(props) {\n    return (\n        props.footerEls.map((item, index) => {\n            return <li key = {index} className=\"footer-item\" style={{listStyle: \"none\", marginRight: \"5px\"}}>\n            <a href ={item.linkAddr}>{item.linkName}</a>\n            </li>\n        })\n    )\n}\n","import React from 'react';\n\nexport default function Login(props) {\n        return (\n            <form action=\"/api/login\" method=\"post\" id=\"login-wrapper\" className={props.showForm} onSubmit={props.checkDB} >\n                <label htmlFor=\"loginEmailInput\">Email Address</label>\n                <input type=\"email\" name=\"loginEmailInput\" id=\"loginEmailInput\" className={\"login-email\"} placeholder=\"Email Address\" defaultValue=\"\" required onChange={props.trackText} />\n                <label htmlFor=\"loginPasswordInput\">Password</label>\n                <input type=\"password\" name=\"loginPasswordInput\" id=\"loginPasswordInput\" className=\"login-password\" placeholder=\"Create Password\" defaultValue=\"\" minLength=\"8\" required onChange={props.trackText} />\n                <button type=\"submit\" id=\"login-button\">Submit</button>\n                <li><a href=\"/\" className=\"pw-reset\">Reset Password or Username</a></li>\n            </form>\n        )\n    }","import React, { Component } from 'react';\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() {\n        return (\n            <form action=\"/\" id=\"register-wrapper\" className={this.props.regFormHide}>\n            <label html=\"register-name\">Name</label>\n            <input type=\"text\" id=\"register-name\" placeholder=\"Name\" minLength=\"2\" required onChange={this.props.checkUserDB}></input>\n            <label htmlFor=\"register-email-input\">Email Address</label>\n            <input type=\"email\" name=\"register-email-input\" id=\"register-email-input\" className=\"register-email\" placeholder=\"Email Address\" required onChange={this.props.checkUserDB}></input>\n            <label htmlFor=\"register-password-input\">Password</label>\n            <input type=\"password\" name=\"register-password-input\" id=\"register-password-input\" className=\"register-password\" placeholder=\"Create Password\" defaultValue=\"\" minLength=\"8\" required onChange={this.props.checkUserDB}></input>\n            <label htmlFor=\"register-password-input-re-enter\">Re-Enter</label>\n            <input type=\"password\" name=\"register-password-input-re-enter\" id=\"register-password-input-re-enter\" className=\"register-password\" placeholder=\"Re-enter password\" defaultValue=\"\" minLength=\"8\" required onChange={this.props.checkUserDB}></input>\n            <button type=\"submit\" id=\"register-button\" onSubmit={this.props.checkUserDB}>Register</button>\n            <button type=\"reset\" id=\"reset-button\">Reset</button>\n            </form>\n        )\n    }\n}\n\nexport {Register};","import React from 'react';\n// import requireAuthentication from '../containers/Authentication/requireAuthentication';\n\nfunction Dashboard(props) {\n    return (\n        <div>\n        <h2>Welcome {props.name}</h2>\n        <p>On this site, you can add bumper stickers to your shopping cart at the top right.\n        </p>\n        </div>\n    )\n}\nexport default Dashboard;","import React, { Component, Fragment } from 'react';\n// import BumpersContext from './BumpersFuncTest';\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n        this.initialState = {\n            isActive: null,\n            items: [\n                {\n                    Title: \"Bumpers Creation\",\n                    submenu: [\n                            \"Text\", \"Layout\", \"Images\", \"Categories\", \"Font\", \"Size\"\n                        ]\n                },\n                {\n                    Title: \"Categories\"\n                }\n            ]\n        }\n        this.state = this.initialState;\n    }\n    render() {\n        return (\n            <div className=\"admin\" id=\"admin\">\n            <h2>Admin Console</h2>\n            <p>This will be a form that controls any and all of the follow items.\n            </p>\n            <ul>\n            <li>Bumper Creation</li>\n            <li>Categories</li>\n            : should be auto-generated when labeled\n            </ul>\n            <AdminMenuItem />\n            </div>\n        )\n    }\n}\nclass AdminMenuItem extends Component {\n    render() {\n        return (\n            <div>\n            <p>When enabled, Express attempts to determine the IP address of the client connected through the front-facing proxy, or series of proxies. The `req.ips` property, then contains an array of IP addresses the client is connected through. To enable it, use the values described in\n            </p>\n            </div>\n        )\n    }\n}\n\n{/* const PagesLoaded = () =>\n    (\n        <BumpersContext.Consumer>\n        {\n            context => (\n                <Button contextVal={context.sidebarCurrBumpers}>\n                {Children}\n                </Button>\n            )\n        }\n        </BumpersContext.Consumer>\n    )\n    const PagesLoaded2 = () => \n    (\n        <BumpersContext.Consumer>\n        {\n            context2 => (\n                <Pages contextPagesVal={context2.sidebarCurrBumpersPages} handlePageChange={context2.handlePageChange}>\n                {Children}\n                </Pages>\n            )\n        }\n        </BumpersContext.Consumer>\n    ) */}\n\n    const Button = (props) => {\n        return (\n            <Fragment>\n            {props.contextVal.map(item => <button key={item.id}>{item.title}</button>)}\n            </Fragment>\n            )\n    }\n\n    const Pages = (props) => {\n        return (\n                <div>\n                <Fragment>\n                {props.contextPagesVal.map(item => <button key={item} onClick={props.handlePageChange}>{item}</button>)}\n                </Fragment>\n                </div>\n                // <Pages contextPagesVal={context.sidebarCurrBumpersPages}>\n                // {Children}\n                // </Pages>\n            )\n        }\n\nexport default Admin;","import React, { Component, Fragment } from 'react';\n// import { bumperStickers } from './BumpersGenerator';\n\nclass SoloBumper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            className: 'bumper bumper-long',\n            display: \"inline-block\",\n            text: 'Add to Cart',\n            textStyle: {},\n            inCartTotal: 0,\n            inCartItems: [],\n            totalNumSpan: this.totalNumSpan\n            //bumpersPaged: this.generatePagesWithBumpers,\n            //pages: this.counter,\n            //currentPageNumber: 1\n        };\n        this.addToCart = this.addToCart.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        // this.handleInCart = this.handleInCart.bind(this);\n        //this.removeAddToCart = this.removeAddToCart(this);\n        // // this.bumper32 = this.bumper32.bind(this);\n        // //this.counter = this.pagesCounted;\n        // this.sendToParent = this.sendToParent.bind(this);\n    }\n    // sendToParent = () => {\n    //     this.props.updateParent(this.state.bumpersPaged, this.state.pages);\n    // };\n    cart = document.getElementsByClassName('cart');\n    totalNumSpan = document.createElement('span').append('this.state.inCartTotal');\n\n    addToCart = () => {\n        this.setState({\n            display: 'inline-block'\n        })\n    }\n    removeAddToCart = () => {\n        this.setState({\n            display: \"none\"\n        })\n    }\n    // generatePagesWithBumpers = {\n    // }\n    // counter = [];\n    // bumper32EachArray = bumperStickers; // bring in all\n    // componentDidMount() {\n    //         this.sendToParent();\n    // }\n    // bumper32 = () => {\n    //     let bumpArrLength = this.bumper32EachArray.length;\n    //     let pages = Math.floor((bumpArrLength/32) +1);\n    //     let count = [];\n    //     let pageHolder = (item) => {\n    //         while(item > 0) {\n    //             count.unshift(item);\n    //             this.counter.unshift(item);\n    //             item-= 1;\n    //         }\n    //         this.counter = count;\n    //         console.log('this counter: ', this.counter)\n    //     }\n    //     pageHolder(pages);\n    //     //let result = [];\n    //     let countAssign = () => {\n    //         let j = 0;\n    //         let loopItems = (result) => {\n    //             result = [];\n    //             for(let i=0; i<32 && j!==bumpArrLength; i++) {\n    //                 result.push(this.bumper32EachArray[j]);\n    //                 j++;\n    //             }\n    //             return result;\n    //         }\n    //         for (let item of count) {\n    //             this.generatePagesWithBumpers[item] = {\n    //                 page: item,\n    //                 bumpers: loopItems()\n    //             }\n    //             // result = [];\n    //         }\n    //     }\n    //     countAssign()\n    //     }\n    handleClickChangeAddToCart = (event) => {\n        // localStorage | cart add / remove\n        // localStorage.clear();\n        let currItem = `cartItemLocal-${event.target.parentNode.previousSibling.id}`;\n        let tempStor = localStorage.getItem(\"inCartLocStoreArr\") !== null ?\n        localStorage.getItem(\"inCartLocStoreArr\") : (\n            window.localStorage.setItem(\"inCartLocStoreArr\", JSON.stringify([currItem])),\n            window.localStorage.setItem(\"inCartLocStoreCount\", \"1\"),\n            window.localStorage.getItem(\"inCartLocStoreArr\")\n        );\n\n        let itemsParsedFromLocStor;\n        itemsParsedFromLocStor = JSON.parse(tempStor);\n        itemStored();\n\n        function itemStored() {\n            let currIndex =\n        itemsParsedFromLocStor.indexOf(currItem) !== null ?\n        itemsParsedFromLocStor.indexOf(currItem) : (\n            undefined\n        )\n            console.log('currIndex:', currIndex, 'itemsParsedFromLocStor:', itemsParsedFromLocStor, itemsParsedFromLocStor.length, 'tempStor:', tempStor, 'currItem:', currItem, 'window.locst:', window.localStorage.key('inCartLocStoreArr').length)\n\n        if(currIndex !== -1) { // needed -1 since -1 when null in array\n            itemsParsedFromLocStor.splice(currIndex, 1);\n            window.localStorage.setItem(\"inCartLocStoreCount\", `${itemsParsedFromLocStor.length}`)\n            localStorage.setItem(\"inCartLocStoreArr\", JSON.stringify(itemsParsedFromLocStor));\n        } else {\n            itemsParsedFromLocStor.push(`cartItemLocal-${event.target.parentNode.previousSibling.id}`);\n            window.localStorage.setItem(\"inCartLocStoreCount\", `${itemsParsedFromLocStor.length}`)\n            localStorage.setItem(\"inCartLocStoreArr\", JSON.stringify(itemsParsedFromLocStor));\n        }\n        }\n        \n        // this.state.textStyle.color === 'green' ? \n        // this.setState(prevState => ({\n        //     textStyle: {color: 'orange', fontWeight: 'bold', fontSize: 'medium'},\n        //     inCartItems: itemsParsedFromLocStor,\n        //     text: 'Add to Cart'\n        // })) : this.setState(prevState => ({\n        //     textStyle: {color: 'green', fontWeight: 'bold', fontSize: 'medium'},\n        //     inCartItems: itemsParsedFromLocStor,\n        //     text: 'In Cart'\n        // }))\n    }\n    handleInCart = () => {\n        this.setState(prevState => ({\n            textStyle: {color: 'red', fontWeight: 'bold', fontSize: 'medium'},\n            text: 'testing handleInCart'\n        }))\n        // let tempLocStorCheck = localStorage.getItem('inCartLocStoreArr');\n        // let tempLocStorParseHolder = JSON.parse(tempLocStorCheck);\n        // let found = `cartItemLocal-${}`;\n        // if(tempLocStorParseHolder.includes(found)) {\n        //     console.log(event.target.parentNode.previousSibling, 'found item...')\n        //     this.setState({\n        //         text: 'testing handleInCart'\n        //     })\n        // }\n    }\n    handleClick = (event) => { \n        // not being used currently > see handleClickChangeAddToCart\n        console.log(event.target.parentNode.previousSibling, 'event click add to cart solobump'); // returns div with bumper id#\n        this.setState({\n            text: 'Item In Cart',\n        });\n        // const locStor = (id, query, ) => {\n        //     localStorage.setItem(`cartItemLocal-${event.target.parentNode.previousSibling.id}`, 1/* , event.target.parentNode.previousSibling.outerHTML */);\n        // } \n\n        // let itemStored = localStorage.setItem(`cartItemLocal-${event.target.parentNode.previousSibling.id}`, '1'/* , event.target.parentNode.previousSibling.outerHTML */);\n        // this.state.inCartItems.push(itemStored);\n        // console.log('client side localstorage', localStorage);\n    }\n    \n    render() {\n        // (this.bumper32());\n        const styles = {\n            containerStyle: {\n                display: this.state.display\n            }\n        }\n        const { containerStyle } = styles;\n        return (\n              //  return (\n                  <div className={this.state.className} style={{}}>\n                    {this.props.children}\n                    {/* <div onMouseOver={this.addToCart} id={i} key={i++} className={this.state.className}>{item} */}\n                    <button style={containerStyle} className={this.props.buttonClass} onClick={this.props.clickCartButtonHandle}>\n                    <CartText text={this.props.text} style={this.state.textStyle} className={this.props.buttonClass} clickAddCartChange={this.handleClickChangeAddToCart} checkInCart={this.handleInCart}/>\n                    </button>\n                    </div>\n                        )\n                //}\n                //)\n               // )\n    }\n}\nfunction CartText(props) {\n    return(\n        <Fragment>\n        <span style={props.style} onClick={props.clickAddCartChange} onLoad={props.checkInCart}>{props.text}</span>\n        </Fragment>\n    )\n}\nexport {SoloBumper, CartText};","import React, { Component } from 'react';\n\n/* export default function BumperTitle(props) { // component\n    return <h1>{props.topHeader}</h1>; // passing in banner from title\n}\n\n// setting variable to Title component\nconst bumperTitle = <BumperTitle topHeader=\"Bumper Stickers - Choose Wisely\" />;\n\nReactDOM.render(\n    bumperTitle,\n    document.getElementById('root')\n); */\n\nexport default class Title extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        const pageTitle = \"Bumper Stickers - Choose Wisely\" ;\n        return (\n            <h1>{pageTitle}</h1>\n            )\n        }\n    }\n    \n    // const bumperTitle = <Title topHeader=\"Bumper Stickers - Choose Wisely\" />;",";\nlet colors = ['red', 'blue', 'purple', 'navy', 'black', 'coral', 'green', 'pink', 'crimson', 'salmon', 'orange', 'tomato', 'darkred', 'grey', 'darkgrey', 'olive', 'deeppink','firebrick', 'tiger'] // later add to database for style of each bumpers\n    let colorsArrLength = colors.length;\nfunction randCol() {\n    return colors[Math.floor(Math.random()*colorsArrLength-1)+1]\n}\n\nexport {randCol};","import React, { Children, Fragment, Component } from 'react';\nimport BumpersContext from '../containers/bumpers/BumpersAndCats';\nimport {SoloBumper} from '../containers/bumpers/SoloBumper';\nimport Title from './Title';\nimport { randCol } from '../utils/randColors';\n\nexport class Categories extends Component {\n    constructor() {\n        super();\n        this.state = {}\n    }\n    render() {\n        return (\n            <Fragment>\n            <BumpersContext.Consumer>\n            {\n                context => (\n                    <CategoryRadioList contextList={context.currBumpersPages} handlePageChangeCat={context.handlePageChangeCat} selected={context.radioCatSelected} handleRadioCatChange={context.handleRadioCatChange}>\n                    {Children}\n                    </CategoryRadioList>      \n                )\n            }\n            </BumpersContext.Consumer>\n            <Title />\n            <BumpersContext.Consumer>\n            {\n                context => (\n                    <CatFormToggleBumpers contextForm={context.radioPagesFiltered} contextCartItems={context.inCartItems} contextAddCartHandle={context.handleAddCartClick} contextTextStyle={context.textStyle} contextButtonIn={context.textStyleInCartButtonClass1} contextButtonOut={context.textStyleInCartButtonClass2} contextFontSize={context.bumperTextSize} >\n                    {Children}\n                    </CatFormToggleBumpers>\n                )\n            }\n            </BumpersContext.Consumer>\n            <BumpersContext.Consumer>\n            {\n                context => (\n                    <CatPagesArr contextFormPages={context.radioCatSelectedPageNums} pagesClick={context.handlePageChangeCat} catPassedForPageTurn={context.radioCatSelected} >\n                    {Children}\n                    </CatPagesArr>\n                )\n            }\n            </BumpersContext.Consumer>\n            </Fragment>\n            )\n    }\n}\n\nconst CatFormToggleBumpers = (props) => {\n    let unparsedLocStor = localStorage.getItem('inCartLocStoreArr') || \"[]\";\n    let parsedLocStor = unparsedLocStor !== null || \"[]\" ? JSON.parse(unparsedLocStor) : undefined;\n    const fontSize = props.contextFontSize;\n    const fontSz = (item) => {\n        document.getElementById(item.id)\n    }\n    return (\n        /* <div className=\"content-grid\" id=\"main-wrapper\" key={5}>\n        <div id=\"cat-items-rendered\"> */\n        <main className=\"main-content\">\n        <div id=\"main-wrapper\" className=\"content-grid\">\n        <div id=\"bumper-left\" className=\"content-left bumper-flex\" key={7}>\n        <Fragment>\n        {props.contextForm.map(item =>\n            parsedLocStor !== (null || undefined || \"[]\") && parsedLocStor.includes(`cartItemLocal-${item.id}`) ?\n            <SoloBumper key={item.id} clickCartButtonHandle={props.contextAddCartHandle} text={'In Cart'} buttonClass={'add-to-cart-selected'}> <div id={item.id} style={{display: 'block', width: '100%', height: \"75px\"}}><span style={{height: '75px', lineHeight: '75px', display: 'inline-grid', color: randCol(), backgroundColor: randCol()}}>{item.title}</span></div></SoloBumper> :\n            <SoloBumper key={item.id} clickCartButtonHandle={props.contextAddCartHandle} text={'Add to Cart'} buttonClass={'add-to-cart'}> <div id={item.id} style={{display: 'block', width: '100%', height: \"75px\"}}><span style={{height: '75px', lineHeight: '75px', display: 'inline-grid', color: randCol(), backgroundColor: randCol()}}>{item.title}</span></div></SoloBumper>\n            )\n        }\n        {/****** \n            later link this to api for updates text={item.cartStatus}   ******/\n        /* props.contextForm.map(item => <button key={item.id}>{item.title}</button>) */}\n        </Fragment>\n        </div>\n        </div>\n        </main>\n        /* </div>\n        </div> */\n    )\n}\nconst CatPagesArr = (props) => {\n    return (\n        <div id=\"simple-pagination\">\n        <ul id='bumper-ul'>\n        {\n            props.contextFormPages.map(item => <li key={item} className={\"page-number\"} value={item} customcattag={props.catPassedForPageTurn} onClick={props.pagesClick}>{item}</li>)\n        }\n        </ul>\n        </div>\n    )\n}\nexport const catsRadioArrForForm = [\n    // form: name: \"bumpers-cat-radio\" | onChange: \"props.handleRadioCatChange\" | class: \"bumpers-label-radio\"\n    {value: \"all\", id: \"all\", \n    checked: \"props.selected === 'all'\", onChange: \"props.handleRadioCatChange\", text: \"All Bumpers\"},\n    {value: \"drive-traffic\", id: \"drive-traffic\", \n    checked: \"props.selected === 'drive-traffic'\", onChange: \"props.handleRadioCatChange\", text: \"Driving & Traffic\"},\n    {value: \"logos\", id: \"logos\", \n    checked: \"props.selected === 'logos'\", onChange: \"props.handleRadioCatChange\", text: \"Logos\"},\n    {value: \"diy\", id: \"diy\", \n    checked: \"props.selected === 'diy'\", onChange: \"props.handleRadioCatChange\", text: \"DIY\"},\n    {value: \"thoughtful\", id: \"thoughtful\", \n    checked: \"props.selected === 'thoughtful'\", onChange: \"props.handleRadioCatChange\", text: \"Thoughtful\"},\n    {value: \"health\", id: \"health\", \n    checked: \"props.selected === 'health'\", onChange: \"props.handleRadioCatChange\", text: \"Health\"},\n    {value: \"inappropriate\", id: \"inappropriate\", \n    checked: \"props.selected === 'inappropriate'\", onChange: \"props.handleRadioCatChange\", text: \"Inappropriate\"},\n]\nconst CategoryRadioList = (props) => {\n    return (\n        <div className=\"categories\" id=\"categories\" style={{display: \"grid\", backgroundColor: \"white\"}}>\n                <h2>Please select a category</h2>\n                <form>\n                {catsRadioArrForForm.map(item => \n                    <Fragment key={item.id}>\n                    <input type=\"radio\" name=\"bumpers-cat-radio\" value={item.value} id={item.id} checked={props.selected === item.value} onChange={props.handleRadioCatChange} />\n                    <label htmlFor={item.value} className=\"bumpers-label-radio\">{item.text}</label>\n                    </Fragment>\n                )\n            }\n                </form>\n            </div>\n    )\n}\n\nexport default Categories;","import React, { createContext, Component } from 'react';\n// import { bumperStickers } from '../bumpers/bumpersTesting';\n//import { SoloBumper } from './SoloBumper';\nimport { catsRadioArrForForm } from '../../components/Categories'\n\n// console.log(DataFromAPI, 'd from a', new Date());\n// setTimeout(() => (console.log(DataFromAPI, 'd from a 4000'), new Date()), 4000);\n// document.addEventListener('DOMContentLoaded', (event) => {\n\nconst pagesForCats = {}; // placeholder for bumperCatMapToPages generation of pages\nconst BumpersContext = createContext();\nexport class BumperContextProvider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // will need to provide control here for admin logged-in page\n            // prevBumpers: {}, may not need this\n            // will need to clean up state\n            // currBumpers: [createPages().pages[0]],\n            // currBumpersPages: pageNumbersArr,\n            apiData: [],\n            locallyStoredCart: window.localStorage,\n            testerLocStor: window.localStorage.tester,\n            cartLoggedinStatus: document.cookie.split(';').find( (item) => item.includes('bsLoggedIn')) ? 'Complete Order' : 'Log in to complete order',\n            sidebarPrevBumpers: '',\n            sidebarCurrBumpers: [{title: \"test\", id: 1}, {title: \"test\", id: 2}],\n            sidebarCurrBumpersPages: pageNumbersArr,\n            //handlePageChange: this.handlePageChange,\n            currBumpersPages: pages,\n            sidebarPages: pages,\n            bumGenLoad: this.createPages,\n            // manually setting start page due to page build in componentdidmount > pulling from pageforcats after mount\n            radioCatSelectedPageNums:this.createPages(this, 20, 'all').pageNumbersArr,\n            radioCatSelected: 'all',\n            radioPagesFiltered: [{title: 'PAGE LOADING...', id: 1}],// this.createPages(20, 'all').pages[0], // need function to call this,\n            bumperTextSize: '300%', \n            inCartTotal: JSON.parse(localStorage.getItem(\"inCartLocStoreCount\")),\n            inCartItems: [],\n            // cartDollTotal: document.querySelectorAll('span.cart-span') ? document.querySelectorAll('span.cart-span').length*1.99 : null,\n            textStyleInCart: {\n                text: {color: 'blue', fontWeight: 'bold', fontSize: 'medium'}\n            },\n            textStyleOutCart: {\n                text: {color: 'red', fontWeight: 'bold', fontSize: 'medium'}\n            }\n        }\n        this.handlePageChange = this.handlePageChange.bind(this);\n        this.handlePageChangeCat = this.handlePageChangeCat.bind(this);\n        this.handleRadioCatChange = this.handleRadioCatChange.bind(this);\n        this.handleAddCartClick = this.handleAddCartClick.bind(this);\n        this.dataPullFromAPI = this.dataPullFromAPI.bind(this);\n        this.bumperCatMapToPages = this.bumperCatMapToPages.bind(this);\n        this.loopThroughBumperCatMapToPages = this.loopThroughBumperCatMapToPages.bind(this);\n        // this.testNewstate = this.testNewstate.bind(this);\n        this.createPages = this.createPages.bind(this);\n        this.itemsAPIConnect = this.itemsAPIConnect.bind(this);\n        this.switchGenCreate = this.switchGenCreate.bind(this);\n    }\n    // testNewstate() {\n    //     let tester = {...this.state}\n    //     this.setState({\n    //         pagesTester: this.state.apiData,\n    //         pagesTester2: 'test worked'\n    //     })\n    // }\n    UNSAFE_componentWillMount() {\n        this.dataPullFromAPI();\n    }\n    componentDidMount() {\n        //load 'all' page 1 after 1 sec\n        // const regex = /cartItemLocal-[0-9]/;\n        // const intermediateLoc = {window.localStorage};\n        // for(let item of intermediateLoc) {\n        //     if(item.contains('cartItemLocal-')) {\n        //         intermediateLoc.push(item)\n        //     }\n        // }\n        // window.localStorage.clear()\n        // if(!window.localStorage.getItem('inCartLocStoreArr')) {\n        //     window.localStorage.setItem('contextTextStyle', ['test', 'teste'])\n        // }\n            setTimeout(() => this.setState({\n                radioCatSelectedPageNums: pagesForCats['all'].pageNumbersArr,\n                radioCatSelected: 'all',\n                radioPagesFiltered: pagesForCats['all'].pages[0],\n        }), 1000) \n    }\n    async dataPullFromAPI() {\n            let storageLoc = window.localStorage;\n            let batch = await fetch('/api/bumpers', {\n                method: 'get',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'localStore': JSON.stringify(storageLoc)\n                }\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                // let dataFromAPI = [];\n                console.log(data, 'data inside async dataPullFromAPI')\n                this.setState({\n                    apiData: data,\n                    localStor: window.localStorage\n                })\n            })\n            .then(() => this.loopThroughBumperCatMapToPages())\n        }\n    \n    handleAddCartClick(e) {\n        // console.log(e.target.parentNode.previousSibling, '[bumpersfunctest.jsx] event click add to cart'); // returns div with bumper id#\n        // this.setState({\n            // text: 'Item In Cart',\n            // textStyle: {color: 'red', fontWeight: 'bold', fontSize: 'medium'}\n        // })\n        let tempInCartState = this.state.inCartItems;\n        // need to fix cart update items\n        // console.log(localStorage, '[bumpersfunctest.jsx] localstorage')\n        tempInCartState.push(e.target.parentNode.previousSibling, e.target.parentNode.parentNode);\n        this.setState(prevState => ({\n            inCartTotal: JSON.parse(localStorage.getItem(\"inCartLocStoreCount\")),\n            inCartItems: tempInCartState,\n        }));\n        tempInCartState = [];\n    }\n    handlePageChange(e) {\n        this.setState({\n            sidebarCurrBumpers: [{title: \"test\", id: 1}, {title: \"test\", id: 2}]\n            // this is not fixed\n        })\n    }\n    handlePageChangeCat(event) {\n        // console.log('test click worked', event.currentTarget.attributes)\n        this.setState({\n            radioPagesFiltered: pagesForCats[event.target.getAttribute('customcattag')].pages[event.currentTarget.value-1]\n            // -1 to match +1 of push from temp num array in loop\n        })\n    }\n    handleRadioCatChange(event) {\n        event.stopPropagation();\n        this.setState({\n            radioCatSelected: event.target.value,\n            radioCatSelectedPageNums: pagesForCats[event.currentTarget.value].pageNumbersArr,\n            radioPagesFiltered: pagesForCats[event.currentTarget.value].pages[0]\n        })\n    }\n    \n    loopThroughBumperCatMapToPages() {\n        // callToCreatePages: add createPages scope for switchGenCreate\n        //const callToCreatePages = () => this.createPages();\n        // const stateBumpersApi = this.state.apiData.slice(0)\n        // console.log(stateBumpersApi, '[stateBumpersApi] infodata')\n        for(let item of catsRadioArrForForm) {\n                this.bumperCatMapToPages(item.value);\n            }\n            this.setState({\n                pagesForCats: pagesForCats\n            })\n            // console.log(this.state.pagesForCats, '+++++++ p for cats')\n            // return pagesForCats;\n        }\n    \n    switchGenCreate(passedFromSwitch) {\n        let data;\n        // const dataFromStateAPI = JSON.parse(JSON.stringify(this.state.apiData)) // all\n        data = this.createPages(20, passedFromSwitch, this.state.apiData); // passing apidata state to createpages func\n        pagesForCats[passedFromSwitch] = data;\n        // pagesForCats.push(data);\n    }\n    bumperCatMapToPages = (catPassed) => {\n        // generate bumpers categories pages\n            switch (catPassed) {\n            // need to automate this for cat changes > forEach or while\n                case 'all':\n                    this.switchGenCreate(catPassed);\n                    break;\n                case 'drive-traffic':\n                    this.switchGenCreate(catPassed);\n                    break;\n                case 'logos':\n                    this.switchGenCreate(catPassed);\n                    break;\n                case 'diy':\n                    this.switchGenCreate(catPassed);\n                    break;\n                case 'thoughtful':\n                    this.switchGenCreate(catPassed);\n                    break;\n                case 'health':\n                    this.switchGenCreate(catPassed);\n                    break;\n                case 'inappropriate':\n                    this.switchGenCreate(catPassed);\n                    break;\n                default:\n                    break;\n                }\n        }\n        // issue with this context <<<< \n        itemsAPIConnect = ({apiData}) => {\n            return [...apiData]; // used for state.apidata to createpages func\n        }\n        transferAPITo = () => this.itemsAPIConnect(this.state)\n        createPages = (perPage = 20, itemCategory, transferAPIInfo) => {\n            let destrAPIState = JSON.parse(JSON.stringify([...transferAPIInfo]));\n            let bumperObj = {};\n            pages = [];\n            // filtering based on category string passed\n            return itemCategory === 'all' ? (\n                    bumperObj.bumpersFiltered = destrAPIState,\n                    bumperObj.bumpSelectedLength = destrAPIState.length,\n                    bumperObj.numberOfPages = Number.isInteger(bumperObj.bumpSelectedLength / perPage) ? bumperObj.bumpSelectedLength / perPage : (parseInt(bumperObj.bumpSelectedLength / perPage) + 1),\n                    bumperObj.testing = 'testing obj loading',\n                    bumperObj.pageNumbersArr = pageNumbersArr,\n                    bumperObj.pageNumGen = (() => {\n                        let temp = [];\n                        let j = 0, z = 0;\n                        function objBumpersTempLoader() {\n                            // need while loop for having bumpers and return if not\n                            while(j < bumperObj.bumpSelectedLength && z < perPage) {\n                                // need a check for bumper exists in loop &&\n                                // pushing object to while loop below\n                                temp.push(bumperObj.bumpersFiltered[j]);\n                                j++; z++;\n                                // }\n                                // console.log('temp temp temp', temp, 'temp')\n                            }\n                            z=0;\n                            return temp;\n                        }\n                        pageNumbersArrTemp = [];\n                        bumperObj.pages = [];\n                        function pushPage(i) {\n                            pageNumbersArrTemp.push(i)\n                        }\n                        for(let i = 0; i < bumperObj.numberOfPages; i++) {\n                                // load number + bumpers to temp then push to pages\n                                let objTemp = {};\n                                objTemp = objBumpersTempLoader();\n                                bumperObj.pages[i] = objTemp;\n                                pushPage(i);\n                                temp = [];\n                                // objTemp = {};\n                            }\n                            bumperObj.pageNumbersArr = pageNumbersArrTemp.map(item => item+1);\n                            \n                            // using objTempLoader to push > move to key/value in bumpersObj\n                            // return {\n                            //     numberOfPages,\n                            //     pages,\n                            //     pageNumbersArr\n                            // }\n                            return bumperObj;\n                        })()\n                        // pageNumGen();\n             ) : (\n                bumperObj.bumpersFiltered = destrAPIState.filter(item => item.category === itemCategory),\n                bumperObj.bumpSelectedLength = destrAPIState.filter(item => item.category === itemCategory).length,\n                bumperObj.numberOfPages = (Number.isInteger(bumperObj.bumpSelectedLength / perPage) ? bumperObj.bumpSelectedLength / perPage : (parseInt(bumperObj.bumpSelectedLength / perPage) + 1)),\n                bumperObj.pageNumbersArr = pageNumbersArr,\n                bumperObj.testing = 'testing obj loading',\n                bumperObj.pageNumGen = (() => {\n                        let temp = [];\n                        let j = 0, z = 0;\n                        function objBumpersTempLoader() {\n                            // need while loop for having bumpers and return if not\n                            while(j < bumperObj.bumpSelectedLength && z < perPage) {\n                                // need a check for bumper exists in loop &&\n                                // pushing object to while loop below\n                                temp.push(bumperObj.bumpersFiltered[j]);\n                                j++; z++;\n                                // }\n                            }\n                            z=0;\n                            return temp;\n                        }\n                        pageNumbersArrTemp = [];\n                        bumperObj.pages = [];\n                        function pushPage(i) {\n                            pageNumbersArrTemp.push(i)\n                        }\n                        for(let i = 0; i < bumperObj.numberOfPages; i++) {\n                                // load number + bumpers to temp then push to pages\n                                let objTemp = {};\n                                objTemp = objBumpersTempLoader();\n                                bumperObj.pages[i] = objTemp;\n                                pushPage(i);\n                                temp = [];\n                                // objTemp = {};\n                            }\n                            bumperObj.pageNumbersArr = pageNumbersArrTemp.map(item => item+1);\n                            pageNumbersArrTemp = [];\n                    // pageNumGen();\n                    // using objTempLoader to push > move to key/value in bumpersObj\n                            // return {\n                            //     numberOfPages,\n                            //     pages,\n                            //     pageNumbersArr\n                            // }\n                            return bumperObj;\n                    })()\n             )\n            // return itemCat === ('all')\n            // ? {\n            //     bumpersFiltered: bumperStickers,\n            //     bumpSelectedLength: bumperStickers.length,\n            //     pageNumbersArr: pageNumbersArr\n            // }\n            // : {\n            //     bumpersFiltered: bumperStickers.filter(item => item.category === itemCat),\n            //     bumpSelectedLength: bumperStickers.filter(item => item.category === itemCat).length,\n            //     pageNumbersArr: pageNumbersArr\n            //     }\n            }\n            // TEMP NAME CHANGE CREATEPAGES FOR TESTING ABOVE\nfontGrow = () => {\n    const divClassBumperLong = document.querySelectorAll('div.bumper-long');\n    let styles;\n    let k = 0;\n    divClassBumperLong.forEach(item => {\n        let font = 10;\n        let iDiv=Number(item.firstElementChild.clientWidth.toString().replace(/D/g, ''))\n        let iSpan = Number(item.firstElementChild.firstChild.clientWidth.toString().replace(/D/g, ''));\n        while( (iDiv-iSpan)>=60) { // WHY DOES NUMBER 60 WORK BEST?????\n            font+=2;\n            iDiv=Number(item.firstElementChild.clientWidth.toString().replace(/D/g, ''))\n            iSpan = Number(item.firstElementChild.firstChild.clientWidth.toString().replace(/D/g, ''));\n            item.firstElementChild.firstChild.style.fontSize = font +'px';\n            // let tmpSpanFontPercent = Number(spanItem.clientWidth.toString().replace(/\\D/g, ''));\n            // let tmpDivFont = Number(divItem.clientWidth.toString().replace(/D/g, ''));\n            // iSpan.style.fontSize = ((font += 2) + 'px').toString() //(font += 5)\n            console.log(iDiv-iSpan)\n        }\n        // if(item.clientWidth > spanItem.clientWidth) {\n        //     spanItem.style.fontSize = '200%';\n        //     console.log('loaded ... width', item.clientWidth, divItem.clientWidth, spanItem.clientWidth)\n        // } else {\n        //     spanItem.style.fontSize = '50%'\n        //     console.log('loaded ... width', item.clientWidth, divItem.clientWidth, spanItem.clientWidth)\n        // }\n        // styles.style.border = '3px solid purple',\n    }\n    )\n}\ncomponentDidUpdate() {\n    // if(document.querySelectorAll('div.bumper-long')) {\n        this.fontGrow()\n    // }\n}\nrender() {\n    if(!this.state.apiData) {\n        return <div>Loading...please wait</div>\n    }\n    return (\n        <BumpersContext.Provider value={{\n            prevBumpers: this.state.prevBumpers,\n            // currBumpers: this.state.currBumpers,\n            // currBumpersPages: this.state.currBumpersPages, \n            apiData: this.state.apiData,\n            sidebarPrevBumpers: this.state.sidebarPrevBumpers,\n            sidebarCurrBumpers: this.state.sidebarCurrBumpers,\n            sidebarCurrBumpersPages: this.state.sidebarCurrBumpersPages,\n            radioCatSelected: this.state.radioCatSelected,\n            radioCatSelectedPageNums: this.state.radioCatSelectedPageNums,\n            radioPagesFiltered: this.state.radioPagesFiltered,\n            handlePageChange: this.handlePageChange,\n            handlePageChangeCat: this.handlePageChangeCat,\n            handleRadioCatChange: this.handleRadioCatChange,\n            handleAddCartClick: this.handleAddCartClick,\n            inCartTotal: JSON.parse(localStorage.getItem(\"inCartLocStoreCount\")),\n            inCartItems: this.state.inCartItems,\n            cartLoggedinStatus: this.state.cartLoggedinStatus,\n            textStyle: this.state.textStyle,\n            textSize: this.state.bumperTextSize,\n        }}>\n            {this.props.children}\n        </BumpersContext.Provider>\n    )\n    }\n    \n}\n// <<< End of BumperContextProvider >>>\n\nexport const BumpersCreator = () => {\n    return (\n       {/* <CreateBumpers /> */} \n    )\n}\n// const bumperIDAdd = () => {\n//     // ensure runs at app start for unique id that follows for keys use\n//     let i=0;\n//     for(let bumper of bumperStickers) {\n//         bumper.id = i;\n//         i++;\n//     }\n// }\n// bumperIDAdd(); now using bumpers from API vs import\n\nlet pageNumbersArr = [];\nlet pageNumbersArrTemp = [];\nlet pages = [];\n\n\nexport default BumpersContext;","import React, { Component, Fragment } from \"react\";\nimport Login from './Login';\nimport Register from './Register';\nimport {users} from '../users/users';\nimport Dashboard from '../../components/Dashboard';\nimport { Switch, Route } from \"react-router-dom\";\nimport Admin from '../../containers/bumpers/Admin';\nimport BumpersContext from '../bumpers/BumpersAndCats';\n\nexport default class LoginControl extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false,\n            regFormHideClasses: 'register-form hide-element',\n            logFormHideClasses: 'login-form hide-element',\n            contactFormHide: 'hide-element'\n        };\n        this.handleChange = this.handleChange.bind(this);\n        // this.handleRegFormClick = this.handleRegFormClick.bind(this);\n        // this.handleLogFormClick = this.handleLogFormClick.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.handleLogFormClick = this.handleLogFormClick.bind(this);\n    }\n    handleChange = (e) => {\n        // not being used > submit creating new formdata\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n    \n    handleLogFormClick() {\n            this.state.logFormHideClasses === 'login-form hide-element' ? this.setState({\n              logFormHideClasses: 'login-form'\n            }) : this.setState({\n              logFormHideClasses: 'login-form hide-element'\n          })\n    }\n    handleCookie(status) {\n        console.log(status, 'status....start of condition')\n        let logCookies = document.cookie;\n        let stat = {\n            loggedIn: status\n        }\n        let decodedCookie = decodeURIComponent(logCookies);\n        if(status) {\n            console.log(status, 'status...true...if(status)')\n            // console.log('decodedCookie', document.cookie, new Date)\n            fetch('/api/cookie-login', {\n                method: \"POST\",\n                headers: {\n                    // Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'same-origin',\n                body: JSON.stringify(stat),\n            })\n            .then(res => console.log(status, res, 'res res res'))\n        } else if(!status) {\n            console.log(status, 'status...false...else/if(!status)')\n            // console.log('decodedCookie', document.cookie, new Date)\n        }\n    }\n    handleLogin(event) {\n        event.preventDefault(); // not sure this is doing anything\n        let dataPass = {\n            loginEmailInput: this.state.loginEmailInput,\n            loginPasswordInput: this.state.loginPasswordInput\n        };\n            fetch('/api/login', {\n                method: \"POST\",\n                body: JSON.stringify(dataPass),\n                headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: 'same-origin'\n            })\n            .then(res => res.json())\n            //.then(data => console.log(data, 'data from express'))\n            .then(data => this.setState(prevState => ({\n                isLoggedIn: data.isLoggedIn,\n                logFormHideClasses: data.logFormHideClasses\n            })))\n            .then(info => this.handleCookie(this.state.isLoggedIn))\n            // .then(document.cookie = 'loggedIn=true; path=/; max-age=30')\n    }\n    removeCookies = () => {\n        fetch('/api/cookie-logout', {\n            method: 'POST',\n            headers: {},\n            body: '',\n        })\n        .then(res => console.log(res, 'res cookie cleared?'))\n    }\n    handleLogout(event) {\n        event.preventDefault();\n        let dataPass = {\n            loginEmailInput: this.state.loginEmailInput\n        };\n            fetch('/api/logout', {\n                method: \"POST\",\n                body: JSON.stringify(dataPass),\n                headers: {\n                \"Content-Type\": \"application/json\"\n            }\n            })\n            .then(res => res.json())\n            //.then(data => console.log(data, 'data from express'))\n            .then(data => this.setState({\n                isLoggedIn: data.isLoggedIn \n            }))\n            .then(\n                this.removeCookies()\n            )\n    }\n    render() {\n        if(this.state.isLoggedIn) {\n            return (\n                <Fragment>\n                <Button text=\"Logout\" click={this.handleLogout}>,\n                </Button>\n                <Login showForm={this.state.logFormHideClasses} checkDB={this.handleLogin} />\n                <Switch>\n                <Dashboard exact path='/dashboard' component={Dashboard} />\n                <Route exact path='/admin' component={Admin} />\n                </Switch>\n                </Fragment>\n            )\n        }\n        if(!this.state.isLoggedIn) {\n            return (\n                <Fragment>\n                <Button text=\"Login\" click={this.handleLogFormClick}>,\n                </Button>\n                <Login showForm={this.state.logFormHideClasses} trackText={this.handleChange} checkDB={this.handleLogin} />\n                </Fragment>\n            )\n        }\n    }\n}\n\nfunction Button(props) {\n    return (\n        props.text === \"Login\" ?\n        <Fragment>\n        <button onClick={props.click} style={{display: \"inline-block\", height: \"20px\", verticalAlign: \"middle\", fontWeight: \"bold\", color: \"white\", backgroundColor: \"var(--main-highlight-color)\"}}>{props.text}</button>\n        </Fragment>\n         :\n         <Fragment>\n        <button onClick={props.click} style={{display: \"inline-block\", height: \"20px\", verticalAlign: \"middle\", fontWeight: \"bold\", color: \"var(--secondary-highlight-color)\", backgroundColor: \"var(--main-background-color)\"}}>{props.text}</button>\n        </Fragment>\n    )\n}\n","import React, { useState, Fragment, Component } from 'react';\n\nconst arrList = ['state test 1', 'state test 2', 'state test 3', ];\nfunction About(props) {\n    const [color, setColor] = useState(false);\n    const [color2, setColor2] = useState('red');\n    const [username, setUser] = useState('');\n    const [password, setPass] = useState('');\n    const handleChangeUser = (e) => {\n        setUser(e.target.value)\n    }\n    const handleChangePass = (e) => {\n        setPass(e.target.value)\n    }\n    function submitForm() {\n        let data = new FormData;\n        fetch('/api/login',\n        {\n            method: \"POST\",\n            body: data,\n        })\n    }\n    function fontPercentage(width) {\n        if(document.activeElement.style.width >= Number(document.activeElement.parentElement.style.width.replace(/\\D/g, ''))) {\n            console.log(width, 'width', document.getElementsByTagName('span'), document.getElementById('top123'), 'document.activeElement.parentElement.style.width')\n            return '0'\n        } else {\n            return fontPercentage(10)\n        }\n    }\n    return (\n        <div className=\"about\">\n        <h2>About SolveJS Bumpers</h2>\n        <p>SolveJS Bumpers is your source for humerous bumper stickers. If you enjoy looking back to see someone smiling or laughing because of the bumper sticker on your vehicle, you are at the right place now.\n        </p>\n        <p>If you feel that little internal tickle or giggle in knowing that your bumper sticker has placed a smile on someone's face, you're at the right site.\n        </p>\n        <p>\n        We trust you will find the best bumper stickers money can buy to help lighten the mood for those who read your stickers as they make their commute to / from work.\n        </p> \n        </div>\n        )\n    }\n    \n    \nfunction Button(props) {\n    return (\n            arrList.map(item => <Item col={props.col} name={item} colChange={props.colChange} />\n                )\n                )\n}\nfunction Form(props) {\n    return (\n        <form action=\"/api/login\" onSubmit={props.sub} method=\"post\">\n        <input type=\"text\" name=\"username\" defaultValue={props.user} onChange={props.userChange}/>\n        <input type=\"text\" name=\"password\" defaultValue={props.pass} onChange={props.passChange}/>\n        <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nclass Item extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            col: 'red',\n            colChange: this.props.colChange\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick() {\n        this.setState({\n        col: 'green'\n    })\n}\n    render() {\n        let i=0;\n        return <button key={i++} style={{backgroundColor: this.state.col}} onClick={this.handleClick}>{this.props.name}</button>\n    }\n}\nexport default About;","import React, { Component, Fragment } from 'react';\n// import { bumperStickers } from './BumpersGenerator';\n\nclass SoloBumperShort extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            className: 'bumper bumper-short',\n            display: \"inline-block\"\n            //bumpersPaged: this.generatePagesWithBumpers,\n            //pages: this.counter,\n            //currentPageNumber: 1\n        };\n        this.addToCart = this.addToCart.bind(this);\n        //this.removeAddToCart = this.removeAddToCart(this);\n        // // this.bumper32 = this.bumper32.bind(this);\n        // //this.counter = this.pagesCounted;\n        // this.sendToParent = this.sendToParent.bind(this);\n    }\n    // sendToParent = () => {\n    //     this.props.updateParent(this.state.bumpersPaged, this.state.pages);\n    // };\n    addToCart = () => {\n        this.setState({\n            display: 'inline-block'\n        })\n    }\n    removeAddToCart = () => {\n        this.setState({\n            display: \"none\"\n        })\n    }\n    // generatePagesWithBumpers = {\n    // }\n    // counter = [];\n    // bumper32EachArray = bumperStickers; // bring in all\n    // componentDidMount() {\n    //         this.sendToParent();\n    // }\n    // bumper32 = () => {\n    //     let bumpArrLength = this.bumper32EachArray.length;\n    //     let pages = Math.floor((bumpArrLength/32) +1);\n    //     let count = [];\n    //     let pageHolder = (item) => {\n    //         while(item > 0) {\n    //             count.unshift(item);\n    //             this.counter.unshift(item);\n    //             item-= 1;\n    //         }\n    //         this.counter = count;\n    //         console.log('this counter: ', this.counter)\n    //     }\n    //     pageHolder(pages);\n    //     //let result = [];\n    //     let countAssign = () => {\n    //         let j = 0;\n    //         let loopItems = (result) => {\n    //             result = [];\n    //             for(let i=0; i<32 && j!==bumpArrLength; i++) {\n    //                 result.push(this.bumper32EachArray[j]);\n    //                 j++;\n    //             }\n    //             return result;\n    //         }\n    //         for (let item of count) {\n    //             this.generatePagesWithBumpers[item] = {\n    //                 page: item,\n    //                 bumpers: loopItems()\n    //             }\n    //             // result = [];\n    //         }\n    //     }\n    //     countAssign()\n    //     }\n    render() {\n        // (this.bumper32());\n        const styles = {\n            containerStyle: {\n                display: this.state.display\n            }\n        }\n        const { containerStyle } = styles;\n        return (\n              //  return (\n                  <div className={this.state.className}>\n                    {this.props.children}\n                    {/* <div onMouseOver={this.addToCart} id={i} key={i++} className={this.state.className}>{item} */}\n                    <button style={containerStyle} className=\"add-to-cart\">\n                    <CartText />\n                    </button>\n                    </div>\n                        )\n                //}\n                //)\n               // )\n    }\n}\nfunction CartText() {\n    return(\n        <Fragment>\n        Add to Cart\n        </Fragment>\n    )\n}\nexport {SoloBumperShort};","import React, { createContext, Children, Component, Fragment, useState } from 'react';\nimport {SoloBumper} from '../bumpers/SoloBumper';\nimport BumpersContext from './BumpersAndCats';\nimport LoginControl from '../Authentication/LoginControl';\nimport {randCol} from '../../utils/randColors';\n\nfunction checkLoggedIn() {\n    console.log('purchased items. thanks.');\n}\n\nconst Cart = (props) => {\n    return  (\n                <BumpersContext.Consumer>\n                    {\n                        context =>\n                        <Fragment>\n                        <CartBumpers contextData={context.apiData}>\n                        {Children}\n                        </CartBumpers>\n                        </Fragment>\n                    }\n                </BumpersContext.Consumer>\n    )\n        }\n\nclass CartBumpers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            destrData: this.props.contextData,\n            currentCartTotal: JSON.parse(localStorage.getItem(\"inCartLocStoreCount\")),\n            visibility: false,\n            purchButtonDisabled: true,\n            titleForButton: 'Please login to complete your order.',\n            totalCost: 0\n        }\n    }\n    /* {cartButtonStyle: '',\n                cartStatus: '',\n                category: '',\n                id: 1,\n                inCart: '',\n                title: 'did not load'} */\n    componentWillReceiveProps() {\n        console.log(this.state.destrData, 'inside did mount')\n        this.setState({\n            destrData: this.props.contextData,\n            currentCartTotal: JSON.parse(localStorage.getItem(\"inCartLocStoreCount\")),\n            totalCost: document.querySelectorAll('span.cart-span') ? Number(localStorage.getItem('inCartLocStoreCount')) * 1.99 : null\n        });\n        \n        // this.cartNumToIcon();\n    }\n    componentDidUpdate() {  // using with componentDidMount to update properly\n        let cartIcon = document.querySelector('li.cart');\n        let currStateTotal;\n        currStateTotal = this.state.currentCartTotal;\n        let nodeSpan = document.createElement('span');\n        cartIcon.appendChild(nodeSpan)\n        nodeSpan.textContent = '';\n        \n        cartIcon.childNodes[1].textContent = currStateTotal;\n        if(cartIcon.children.length > 2) {\n            cartIcon.removeChild(cartIcon.childNodes[2])\n        }\n    }\n    componentDidMount() { // using with componentDidUpdate to update properly\n        // let inCartLocStorCount = localStorage.getItem(\"inCartLocStoreCount\") !== (null || undefined) ? JSON.parse(localStorage.getItem(\"inCartLocStoreCount\")) : 0 ;\n        let cartIcon = document.querySelector('li.cart');\n        let currStateTotal;\n        currStateTotal = this.state.currentCartTotal;\n        let nodeSpan = document.createElement('span');\n        cartIcon.appendChild(nodeSpan)\n        nodeSpan.textContent = '';\n        cartIcon.childNodes[1].textContent = currStateTotal;\n        if(cartIcon.children.length > 2) {\n            cartIcon.removeChild(cartIcon.childNodes[2])\n        }\n        this.setState(prevState => ({\n            totalCost: Number(localStorage.getItem('inCartLocStoreCount')) * 1.99\n        }))\n    }\n//     handleChange = () => {\n//         this.setState({\n//             cartLoggedinStatus: document.cookie.split(';').find( (item) => item.includes('bsLoggedIn')) ? 'logged in' : 'not logged in'\n//     })\n// }\n    cartNumToIcon = () => {\n        \n        // cartIcon.append(spanText)\n    }\n    handleClickChangeAddToCart = (event) => {\n        // localStorage | cart add / remove\n        // localStorage.clear();\n        let currItem = `cartItemLocal-${event.target.parentNode.previousSibling.id}`;\n        let tempStor = localStorage.getItem(\"inCartLocStoreArr\");\n\n        let itemsParsedFromLocStor;\n        itemsParsedFromLocStor = JSON.parse(tempStor);\n        itemStored();\n\n        function itemStored() {\n            let currIndex =\n        itemsParsedFromLocStor.indexOf(currItem);\n\n        if(currIndex !== -1) { // needed -1 since -1 when null in array\n            itemsParsedFromLocStor.splice(currIndex, 1);\n            localStorage.setItem(\"inCartLocStoreArr\", JSON.stringify(itemsParsedFromLocStor));\n        }\n        // else {\n        //     itemsParsedFromLocStor.push(`cartItemLocal-${event.target.parentNode.previousSibling.id}`);\n        //     localStorage.setItem(\"inCartLocStoreArr\", JSON.stringify(itemsParsedFromLocStor));\n        // }\n        }\n        this.setState(prevState => ({\n            currentCartTotal: itemsParsedFromLocStor.length,\n            totalCost: Number(localStorage.getItem('inCartLocStoreCount')) * 1.99\n        }))\n        // this.state.textStyle.color === 'green' ? \n        // this.setState(prevState => ({\n        //     textStyle: {color: 'orange', fontWeight: 'bold', fontSize: 'medium'},\n        //     inCartItems: itemsParsedFromLocStor,\n        //     text: 'Add to Cart'\n        // })) : this.setState(prevState => ({\n        //     textStyle: {color: 'green', fontWeight: 'bold', fontSize: 'medium'},\n        //     inCartItems: itemsParsedFromLocStor,\n        //     text: 'In Cart'\n        // }))\n    }\n    handleHoverCartButton = () => {\n        if(document.cookie.split(';').find( (item) => item.includes('bsLoggedIn'))) {\n            this.setState({\n                titleForButton: '',\n                purchButtonDisabled: false\n            })\n        } else {\n            this.setState({\n                titleForButton: 'Please login to complete your order.',\n                purchButtonDisabled: true\n            })\n        }\n    }\n    handleOrder = async () => {\n        // need order page\n        // need func to remove items in localstorage\n        // send to api\n        // redirect home\n        const inCart = localStorage.getItem('inCartLocStoreArr');\n        const response = await fetch('/api/order', {\n            method: 'POST',\n            referrerPolicy: 'same-origin',\n            headers: {\n                'accept': 'text/html',\n                'content-type': 'application/json',\n                // cookie: document.cookie.split(';').find(item => item.includes('bsLoggedIn'))\n            },\n            // mode: 'same-origin',\n            // credentials: 'same-origin', \n            body: JSON.stringify(\n                {\"user\": \"test\",\n                \"items\": JSON.stringify(inCart)}, // get text\n            )\n        })\n        .then(response => console.log('response.json()', response))\n        // .then(data => console.log('after res data', data))\n        .then(localStorage.setItem(\"inCartLocStoreArr\", \"[]\"),localStorage.setItem(\"inCartLocStoreCount\", 0))\n        .then(this.setState({\n            visibility: !this.state.visibility\n        }))\n    }\n    totalChange = () => {\n        this.setState(prevState => ({\n            totalCost: document.querySelectorAll('span.cart-span') ? Number(localStorage.getItem('inCartLocStoreCount')) * 1.99 : null\n        }))\n    }\n    render() {\n        const unparsedLocStor = localStorage.getItem('inCartLocStoreArr') || \"[]\";\n        let parsedLocStor = unparsedLocStor !== null || \"[]\" ? JSON.parse(unparsedLocStor) : null;\n        let parseData = JSON.parse(JSON.stringify([...this.props.contextData]));\n        // let test2 = JSON.stringify([...props.contextData]).valueOf();\n        // parseData.map(item => destrData.push(item))\n        // let test3 = JSON.parse(test2)\n        if(this.state.destrData.length !== 0 && parsedLocStor.length > 0) {\n            return (\n                <div id='cart-content' className='main-content'>\n                <h2 style={{textAlign: 'center', fontWeight: 'bold'}}>Current Cart Items</h2>\n                <div id=\"main-wrapper\" className=\"content-grid\">\n                <div id=\"bumper-left\" className=\"content-left bumper-flex\" key={7}>\n                {\n                    parsedLocStor.map(item =>\n                    <SoloBumper key={Number(item.substring(14))} clickCartButtonHandle={this.handleClickChangeAddToCart} text={'Remove - $1.99'} buttonClass={'add-to-cart-selected'}> <div id={this.state.destrData[Number(item.substring(14))].id} style={{display: 'block', width: '100%', height: \"75px\"}}>\n                    <span className='cart-span' onClick={this.totalChange} style={{height: '75px', lineHeight: '75px', display: 'inline-block', color: randCol(), backgroundColor: randCol()}}>{this.state.destrData[Number(item.substring(14))].title}\n                    </span></div>\n                    </SoloBumper>\n                    )\n                }\n                </div>\n                <div style={{textAlign: 'center',margin: 'auto', marginTop: '15px', width: 'max-content'}}>\n                <div style={{textAlign: 'left'}}>\n                <CCPay show={!this.state.visibility} totalCost={this.state.totalCost} totalChange={this.totalChange}/>\n                </div>\n                <div style={{textAlign: 'left'}}>\n                <PurchButton disabled={this.state.purchButtonDisabled} text={'Complete Purchase'} title={this.state.titleForButton} order={this.handleOrder} hover={this.handleHoverCartButton}/>\n                </div>\n                </div>\n                </div>\n                </div>\n                    )\n                } else if(parsedLocStor.length === 0) {\n            return (\n                <div id='contact-wrapper' className='content-left'>\n                <h2>Cart is Empty</h2>\n                    </div>\n                    )\n                } else {\n            return (\n                <div id='contact-wrapper' className='content-left'>\n                <h2>Cart is Empty Else</h2>\n                    </div>\n                    )\n                }\n    }\n}\nfunction PurchButton(props) {\n    // response.json() Promise { <state>: \"pending\" } 200\n    return <button disabled={props.disabled} onMouseOver={props.hover} onClick={props.order} title={props.title}>{props.text}</button>\n    // return document.cookie.split(';').find( (item) => item.includes('bsLoggedIn')) ? <button onMouseOver={props.hover} onClick={props.order}>{props.text}</button> : 'Please Log In to Order'\n        \n}\nfunction CCPay(props) {\n    if(props.show) {\n        return (\n            <div>\n            <TotalCartCost totalCost={props.totalCost} totalChange={props.totalChange} />\n            <form id='cc-pay' key={1}>\n            <input type='text' value='Name on Card' /><br />\n            <input type='number' value={Number(1111999911119999)} /><br />\n            <input type='data' value={'11/2023'} /><br />\n            </form>\n            </div>\n        )\n    } else \n    return null\n}\nfunction TotalCartCost(props) {\n    return (\n    <span>Cart Total:  {props.totalCost}</span>\n    )\n}\n// class PurchButton extends Component {\n//     state = {\n//         text: document.cookie.split(';').find( (item) => item.includes('bsLoggedIn')) ? 'logged in' : 'not logged in'\n//     }\n//     handleChange() {\n//         this.setState({\n//             text: 'changed'\n//         })\n//     }\n//     render() {\n//         return <button onChange={this.handleChange}>{this.state.text}</button>\n//     }\n// }\n\nexport default Cart;\n\n// return document.cookie.split(';').find( (item) => item.includes('bsLoggedIn')) ?\n//         this.setState({\n//             cartLoggedinStatus: 'logged in'\n//         }) : this.setState({\n//             cartLoggedinStatus: 'not logged in'\n//         })  ","import React, { Component } from 'react';\nimport { BrowserRouter as Router,\nSwitch,\nRoute,\nLink } from 'react-router-dom';\nimport './reset.css';\nimport './style.css';\nimport './grid-flex.css';\nimport Menu from './containers/menu/Menu';\n// import MenuTestOnly from './menu/MenuTestOnly';\nimport Footer from './components/Footer';\nimport LoginControl from './containers/Authentication/LoginControl';\nimport Registration from './containers/Authentication/Register';\nimport Login from './containers/Authentication/Login';\nimport {users} from './containers/users/users';\nimport Contact from './containers/Contact';\nimport About from './components/About';\nimport Categories from './components/Categories';\nimport Aside from './containers/aside/Aside';\nimport Admin from './containers/bumpers/Admin';\nimport {/* BumpersCreator */ BumperContextProvider} from './containers/bumpers/BumpersAndCats';\nimport Cart from './containers/bumpers/Cart';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  render() {\n    if(localStorage.getItem(\"inCartLocStoreCount\") === null) {\n      localStorage.setItem(\"inCartLocStoreArr\", \"[]\");\n      localStorage.setItem(\"inCartLocStoreCount\", \"0\"); // initialize if not set \n    }\n    // localStorage.clear()\n   return (\n     <div id=\"body\">\n     {<Menu handleRegFormClick={this.handleRegFormClick} handleLogFormClick={this.handleLogFormClick} handleContactFormClick={this.handleContactFormClick} />}\n     {/* <MenuTestOnly  handleRegFormClick={this.handleRegFormClick} handleLogFormClick={this.handleLogFormClick} handleContactFormClick={this.handleContactFormClick} /> */}\n     {/* <BumpersDiv /> */}\n     <Footer style/>\n     {/* <Route path='/' component={Home} /> */}\n     <Switch>\n     <BumperContextProvider>\n     {/* <Aside /> */}\n      <Route exact path='/about' component={About} />\n      {/* <Route exact path='/categories' component={Categories} /> */}\n      <Route exact path='/' component={Categories} />\n      <Route exact path='/contact' component={Contact} />\n      <Route path='/cart'  component={Cart} />\n      {/* <Route path='/created' component={BumpersCreator} /> */}\n      <LoginControl component={LoginControl}>\n      <Route exact path='/admin' component={Admin} />\n      </LoginControl>\n      </BumperContextProvider>\n      </Switch>\n      <Switch>\n      {/* need to refactor forms to be able to switch properly */}\n      \n      <Route path='#' component={Login} />\n      <Route path='#' component={Registration} />\n      </Switch>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router,\nSwitch,\nLink,} from 'react-router-dom';\n// import './containers/index.css';\nimport App from './App';\nimport * as serviceWorker from './containers/serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}